
# we get the data from xml file  
'''
import xml.etree.ElementTree as ET
import requests



def extract_specific_keys(xml_file, key_name):
    tree = ET.parse(xml_file)  
    return [element.text for element in tree.iter() if element.tag == key_name]

def save_to_file(data, output_file):
    with open(output_file, 'w') as f:
        f.write("\n".join(data))




xml_file_path = 'result2.xml'

key_to_extract = 'title'

extracted_data = extract_specific_keys(xml_file_path, key_to_extract)

output_file_path = 'output1.txt'
save_to_file(extracted_data, output_file_path)

'''

# we get the data from url

'''import xml.etree.ElementTree as ET
import requests

def save_url_data_to_file(url, output_file):
    
    response = requests.get(url)
    
    if response.status_code == 200:
        with open(output_file, 'wb') as f:
            f.write(response.content)
        print("Data saved to", output_file)
    else:
        print("Failed to retrieve data from the URL")


def extract_specific_keys(xml_file, key_name):
    tree = ET.parse(xml_file)  
    return [element.text for element in tree.iter() if element.tag == key_name]

def save_to_file(data, output_file):
    with open(output_file, 'w') as f:
        f.write("\n".join(data))


api_url =  "https://aws.amazon.com/about-aws/whats-new/recent/feed"

xml_file_path = 'url_data.xml'
latest_data = save_url_data_to_file(api_url, xml_file_path)


key_to_extract = 'title'

extracted_data = extract_specific_keys(xml_file_path, key_to_extract)

output_file_path = 'output.txt'
save_to_file(extracted_data, output_file_path)
'''

# data save in json formate 
'''
import xml.etree.ElementTree as ET
import requests
import json

def save_url_data_to_file(url, output_file):
    
    response = requests.get(url)
    
    if response.status_code == 200:
        with open(output_file, 'wb') as f:
            f.write(response.content)
        print("Data saved to", output_file)
    else:
        print("Failed to retrieve data from the URL")


def extract_specific_keys(xml_file, key_name):
    tree = ET.parse(xml_file)  
    return [element.text for element in tree.iter() if element.tag == key_name]

def save_to_file(data, output_file):
    with open(output_file, 'w') as f:
         json.dump(data, f, indent=4)
         #f.write("\n".join(data))


api_url =  "https://aws.amazon.com/about-aws/whats-new/recent/feed"

xml_file_path = 'url_data.xml'
latest_data = save_url_data_to_file(api_url, xml_file_path)


key_to_extract = 'title'

extracted_data = extract_specific_keys(xml_file_path, key_to_extract)

output_file_path = 'RSS-feed.json'
save_to_file(extracted_data, output_file_path)
'''
